source:
  provider:
    package: deform
    version: master
  apiVersion: "raw.import.deform.io/v1alpha1"
  kind: AwsS3Bucket
target:
  provider:
    package: provider-aws
    version: v0.20.0
  apiVersion: s3.aws.crossplane.io/v1beta1
  kind: Bucket
imports:
- from: "spec.id"
  # same as: - from: "spec.bucket"
  to: "spec.annotations['crossplane.io/external-name']"
- from: "spec.arn"
  to: "metadata.annotations['import.deform.io/arn']"

- from: "spec.force_destroy"
  ##XXX unsure... This might be overriding a global setting in the future
  to: "spec.deletionPolicy"
  transforms:
  - type: convert
    convert:
      toType: string
  - map:
      "false": "Orphan"
      "true": "Delete"
    type: map
- from: "spec.region"
  to: "spec.forProvider.locationConstraint"
- from: "spec.acl"
  to: "spec.forProvider.acl"
- from: "spec.request_payer"
  to: "spec.forProvider.paymentConfiguration.payer"
- from: "spec.acceleration_status"
  #TODO: Check if (how) an empty value here works!
  to: "spec.forProvider.accelerateConfiguration.status"
- from: "spec.versioning[0].enabled"
  to: "spec.forProvider.versioningConfiguration.status"
  transforms:
  - type: convert
    convert:
      toType: string
  - map:
      "true": "Enabled"
      "false": "Suspended"
    type: map
- from: "spec.versioning[0].mfa_delete" #XXX The translation of this one is unclear
  to: "spec.forProvider.versioningConfiguration.mfaDelete"
  transforms:
  - type: convert
    convert:
      toType: string
  - map:
      "true": "Enabled"
      "false": "Disabled"
    type: map


- from: "spec.bucket_domain_name"
  to: "spec.annotations['import.deform.io/bucket_domain_name']"
- from: "spec.bucket_regional_domain_name"
  to: "spec.annotations['import.deform.io/bucket_regional_domain_name']"
- from: "spec.hosted_zone_id"
  to: "spec.annotations['import.deform.io/hosted_zone_id']"

- from: "spec.lifecycle_rule[0].id"
  to: "spec.forProvider.lifecycleConfiguration.rules[0].id"
- from: "spec.lifecycle_rule[0].abort_incomplete_multipart_upload_days"
  to: "spec.forProvider.lifecycleConfiguration.rules[0].abortIncompleteMultipartUpload.daysAfterInitiation"
- from: "spec.lifecycle_rule[0].enabled"
  to: "spec.forProvider.lifecycleConfiguration.rules[0].status"
  transforms:
  - type: convert
    convert:
      toType: string
  - map:
      "true": "Enabled"
      "false": "Disabled"
    type: map
- from: "spec.lifecycle_rule[0].expiration[0].date"
  to: "spec.forProvider.lifecycleConfiguration.rules[0].expiration.date"
- from: "spec.lifecycle_rule[0].expiration[0].days"
  to: "spec.forProvider.lifecycleConfiguration.rules[0].expiration.days"
- from: "spec.lifecycle_rule[0].expiration[0].expired_object_delete_marker"
  to: "spec.forProvider.lifecycleConfiguration.rules[0].expiration.expiredObjectDeleteMarker"

- from: "spec.cors_rule[0].allowed_headers"
  to: "spec.forProvider.corsConfiguration.corsRules[0].allowedHeaders"
- from: "spec.cors_rule[0].allowed_methods"
  to: "spec.forProvider.corsConfiguration.corsRules[0].allowedMethods"
- from: "spec.cors_rule[0].allowed_origins"
  to: "spec.forProvider.corsConfiguration.corsRules[0].allowedOrigins"
- from: "spec.cors_rule[0].expose_headers"
  to: "spec.forProvider.corsConfiguration.corsRules[0].exposeHeaders"
- from: "spec.cors_rule[0].max_age_seconds"
  to: "spec.forProvider.corsConfiguration.corsRules[0].maxAgeSeconds"

exports:
- from: "spec.arn"
  at: "status.atProvider.arn"

###################################################################
#TODO: server_side_encryption_configuration 
# (to: "spec.forProvider.serverSideEncryptionConfiguration")
# - This has "rules", where - objects need to be expanded
